local settings = require("settings")

function init(self)
	self.input_timer=2
	msg.post(".", "acquire_input_focus")
	gui.set_visible(gui.get_node("scanlines"), settings.scanlines)
	gui.set_scale(gui.get_node("text1"), vmath.vector3(0,0,1))
	--gui.set_scale(gui.get_node("text2"), vmath.vector3(0,0,1))
	--gui.set_scale(gui.get_node("text3"), vmath.vector3(0,0,1))
	gui.set_color(gui.get_node("text2"), vmath.vector4(1,1,1,0))
	gui.set_color(gui.get_node("text3"), vmath.vector4(1,1,1,0))
	gui.animate(gui.get_node("text1"), "scale",vmath.vector3(2,2,1), gui.EASING_IN, 1.2, 0)
	--gui.animate(gui.get_node("text2"), "scale",vmath.vector3(1,1,1), gui.EASING_IN, 1.2, 1.3)
	--gui.animate(gui.get_node("text3"), "scale",vmath.vector3(1,1,1), gui.EASING_IN, 1.2, 3)
	gui.animate(gui.get_node("text2"), "color",vmath.vector4(1,1,1,1), gui.EASING_IN, 1.2, 1.3)
	gui.animate(gui.get_node("text3"), "color",vmath.vector4(1,1,1,1), gui.EASING_IN, 1.2, 3)
end

function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	if self.input_timer > 0 then self.input_timer=self.input_timer - dt end
end

function on_input(self, action_id, action)
	if self.input_timer>0 then return end
	if (action_id == hash("escape") and action.released) 
	or (action_id == hash("fire") and action.released)
	or (action_id == hash("touch") and action.released) then
		msg.post("startup:/handler#startup", "show_menu")
	end	
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
