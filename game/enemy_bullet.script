go.property("speed", 50)

function init(self)
	self.manager=nil
	self.is_alive=true
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	local pos=go.get_position()
	if pos.y<-10 then		
		msg.post(self.manager, "enemy_bullet_destroyed",{points=0})
		go.delete()
		return
	end
	if self.is_alive then
		pos.y = pos.y - self.speed * dt
		go.set_position(pos)
	end
end



function on_message(self, message_id, message, sender)
	if message_id==hash("trigger_response") and message.enter then
		msg.post("#collisionobject", "disable")
		self.is_alive=false
		local pts=0
		if message.other_group==hash("bullet") then 
			pts=5 
			msg.post("/sound_manager", "play_sample",{sample="hit2"}) -- use other sample
		end
		msg.post(self.manager, "enemy_bullet_destroyed",{points=pts})
		sprite.play_flipbook ("#sprite","enemy1_explosion",function()
			go.delete() 
		end)	
	end
	
	if message_id==hash("subscribe") then
		self.manager=message.parent_url
	end

	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
