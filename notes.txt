Notes
=====

Todo:
Some animation when bullets are removed from screen - cases are for enemy bullets (in manager) and player bullets (in player)
Better mobile controls
Implement bonus types: extra life, speed
Smarter enemy shooting:
  a) if player is on same x as enemy, shoot (ok)
  b) if enemy is slightly to the left and another to the right of the player, shoot


Done:
Add accuracy bonus with animation on game over screen (ok)
Add more levels to reach 10 in total (ok)
Scanlines effect (ok)
Settings screen (enable / disable sound & scanlines) (ok)
Sound support (ok)
Enemies should not be destroyed when colliding with wall (ok)
Add game won screen
Troubleshoot edge reaching bug (ok... maybe)
on-screen controls on mobile only (ok)
pre-game countdown (ok)
lives as graphics (ok)
Add bullet firing to enemies (ok)
Use game_info to store shot stats (ok)
Add pause screen (ok)
Add game over screen (ok)
Add appropriate particle fx on bullet destruction (ok)
Add bonus when ufo is destroyed (ok)
Enemy initial speed should be a level property (ok)
When enemies reach the bottom, it's game over (ok)
When player is hit, clear all bullets, pause for a few seconds and, maybe, add some invincibility time (ok)
To clear all bullets, manager must know about them!!! (ok)
  manager will fire and delete enemy_bullets
  player will receive a message to delete own bullets
  player should track own bullets

When a life is lost, reduce no of bullets on screen if over 1 (ok)
Show level in pregame screen or in hud (ok)
Show number of bullets on screen in hud? (ok)
Add to Github (ok)
Different way of showing max player bullets (ok)
Enemy fire rate should be level property (ok)
Give points when shooting enemy bullets (ok)
Add wall support (ok)


Notes:
21/9 is 2560×1080
1280x540
640x270 - choosen resolution

Document experience to Defold forum
- Trigger collisions: many times not firing, because I forgot to set masks to both colliding objects
- Implementing a pause feature is more complicated than expected (you need a collection proxy, you need to dispatch a set_time_step message, you need to separately handle logic not covered by time step)
- Understanding messaging: Finding the proper url to post a message is a bit hit and miss, but I ended up having message targets "subscribe" to their caller by sending a message to capture their url. 
What was more difficult was understanding how to architecture the logic when implementing the aliens behavior; in Space Invaders, once an alien reaches the left or right of the screen, direction is reversed and all aliens move down. If only the alien in question had to change direction and move down, implementation would have been very easy - I would just have to add tis bejavior in the update function. However, since all aliens need to move down and to the opposite horizontal direction, I thought that I could:
a. create a manager game object, with an alien factory
b. at level start, the manager spawns aliens in their proper positions and keeps a table with their ids
c. in the alien script, if it reaches the edge, it posts a message ("edge_reached") back to the manager
d. if the manager receives this message, it loops through all aliens, moves them down and changes their direction
This approach didn't work, I guess because the order of operations was undetermined. All aliens of a column sent the "edge_reached" message and their position was changed in both the alien update function and the manager function that handles the "edge_reached" message.
I ended up creating a container "enemies" object that took the aliens spawning responsibility from manager and handled moving the aliens in its update function, so the actual alien game object just handled collisions and firing.


Planet sprite:
Master484  (http://m484games.ucoz.com/)

Play/pause buttons:
OPTIONAL: Credit "Anton Revin"

Graphics:
Comp-3 Interactive (https://comp3interactive.itch.io/invaders-from-outerspace-full-project-asset-pack)

Sound effects:
Laser sounds - Muncheybobo 
Explosions - Jesús Lastra
Misc - artisticdude

Music:
HydroGene




